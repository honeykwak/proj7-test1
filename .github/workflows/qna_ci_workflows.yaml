name: Qna Ci Workflows  # workflow의 이름 정의

on:
  push:
    branches:
      - master # master 브랜치에 push 이벤트가 발생했을 때 이 workflow 실행
    paths:
      - 'docker-qna-frontend/**' # master 브랜치에 해당 경로 내 수정을 포함한 push 이벤트

jobs:
  detect-and-deploy:
    permissions:
      contents: write # 해당 job이 GitHub 저장소의 내용에 쓰기 권한을 가지도록 설정
    runs-on: ubuntu-latest # job이 실행될 가상 환경의 운영체제를 ubuntu-latest로 설정
    steps:
      - name: Checkout code
        uses: actions/checkout@v2 # runner에 저장소 코드를 다운하고 특정 브랜치로 checkout 하는 jobs 실행

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v34 # 변경된 파일들을 감지하기 위해 'tj-actions/changed-files@v34' 사용

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2 # Docker Buildx를 설정하기 위해 'docker/setup-buildx-action@v2' 사용

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Determine frontend image version
        id: frontend-version
        run: |      #해
          # manifest/frontend/4.frontend.yaml 파일에서 현재 이미지 버전 탐색. 찾지 못하면 '0.0'을 기본값으로 사용
          CURRENT_VERSION=$(grep -oP 'honeykwak/docker-qna-frontend:\K[0-9]+\.[0-9]+' manifest/frontend/4.frontend.yaml)
          if [ -z "$CURRENT_VERSION" ]; then
            CURRENT_VERSION=0.0
          fi
          # 새로운 버전을 현재 버전에 1.0을 더해 설정하므로 이미지가 존재하지 않을 때 이미지 버전은 1.0부터 시작
          NEW_VERSION=$(echo $CURRENT_VERSION + 1.0 | bc)
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV # 새로운 버전을 환경 변수에 설정
      - name: Build and Push Frontend Image
        run: |
          # Docker image를 build하고 Docker Hub에 새로운 버전을 tag로 하여 push
          docker build -t honeykwak/docker-qna-frontend:${{ env.NEW_VERSION }} docker-qna-frontend
          docker push honeykwak/docker-qna-frontend:${{ env.NEW_VERSION }}
      - name: Update frontend.yaml
        run: |
          # manifest/frontend/4.frontend.yaml 파일에서 이미지 버전을 새로운 버전으로 업데이트
          sed -i 's|image: honeykwak/docker-qna-frontend:.*|image: honeykwak/docker-qna-frontend:${{ env.NEW_VERSION }}|' manifest/frontend/4.frontend.yaml
      - name: Commit and push changes
        run: |
          # 변경된 manifest 파일을 commit하고 master 브랜치에 push
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git add manifest/frontend/4.frontend.yaml
          git commit -m "Update Docker images in manifest files"
          git push origin master
